// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mux "github.com/gorilla/mux"
	mock "github.com/stretchr/testify/mock"
)

// EndPointProvider is an autogenerated mock type for the EndPointProvider type
type EndPointProvider struct {
	mock.Mock
}

// Authenticate provides a mock function with given fields: w, r
func (_m *EndPointProvider) Authenticate(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetTransactionsByHashes provides a mock function with given fields: w, r
func (_m *EndPointProvider) GetTransactionsByHashes(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetTransactionsByRLP provides a mock function with given fields: w, r
func (_m *EndPointProvider) GetTransactionsByRLP(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// Register provides a mock function with given fields: router
func (_m *EndPointProvider) Register(router *mux.Router) {
	_m.Called(router)
}

// NewEndPointProvider creates a new instance of EndPointProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEndPointProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *EndPointProvider {
	mock := &EndPointProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
